#!/usr/bin/env python3
# -*- coding: utf-8 -*-
import numpy as np
from sympy import *
from sympy.abc import x
import matplotlib.pyplot as plt

init_printing(use_unicode=False, wrap_line=False)

"""
    Takes a SymPy Function f on (0, P) and returns the values of the Fourier
    series of the function f(x) at the point x.
"""
def FourierTrigonometricSeries(f, P, x, n):
    a_0 = (2/P) * integrate(f, (x, 0, P))
    acum = a_0    
    for k in range(1, n+1):
        a_k = (2/P) * integrate(f * cos(2*pi*k*x/P), (x, 0, P))        
        b_k = (2/P) * integrate(f * sin(2*pi*k*x/P), (x, 0, P))
        acum = acum + a_k*cos(2*pi*k*x/P) + b_k*sin(2*pi*k*x/P)
    return acum

#Parameters
N = 6
f = x**2
P = 1

fseries_fn = FourierTrigonometricSeries(f, P, x, N)

print(fseries_fn)

dom = np.linspace(-2*P, 2*P, N)

y = [fseries_fn.subs(x, i).evalf() for i in dom]

plt.plot(dom, y)

plt.show()